import { createStore, applyMiddleware, compose } from 'redux';
import createSagaMiddleware from 'redux-saga';
import {
  persistStore,
  persistReducer,
} from 'redux-persist';
import storage from 'redux-persist/lib/storage';

import sagas from './sagas';
import rootReducer from './reducers';

const sagaMiddleware = createSagaMiddleware();

const middleware = [sagaMiddleware];

const persistConfig = {
  key: 'root',
  storage,
  blacklist: [
    'cards',
    'wallet',
    'alert',
    'card',
  ],
};

const persistedReducer = persistReducer(persistConfig, rootReducer);
const composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;

const store = createStore(persistedReducer, composeEnhancers(applyMiddleware(...middleware)));
sagaMiddleware.run(sagas);

const persistor = persistStore(store);

export { store, persistor };
